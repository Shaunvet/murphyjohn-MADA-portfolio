---
title: "Presentation Exercise"
---

# Introduction

I will be reproducing a visualization and table from data which can be found [here](https://ourworldindata.org/grapher/food-emissions-supply-chain). The [full article](https://ourworldindata.org/food-choice-vs-eating-local) by Hannah Ritchie is in the *Our World in Data* journal. The data was free for download along with an image of the graph, which I've pasted below.

<div style="text-align: center;">
  ![](food-emissions-supply-chain.png)

</div>

# Reproducing a graph

## AI's Attempt

Per the instructions, I asked ChatGPT to write me code that will reproduce the figure. I uploaded the above png and wrote "I have the data in this graph. Write R code to recreate it". I received the following output.

```{r}
library(ggplot2)

# Data
food_items <- c("Beef (beef herd)", "Dark Chocolate", "Lamb & Mutton", "Beef (dairy herd)", "Coffee", 
                "Shrimps (farmed)", "Cheese", "Fish (farmed)", "Pig Meat", "Poultry Meat", "Palm Oil", 
                "Olive Oil", "Eggs", "Rice", "Sunflower Oil", "Tofu", "Milk", "Tomatoes", "Peas", "Bananas")

total_emissions <- c(99, 47, 40, 33, 29, 27, 24, 14, 12, 9.9, 7.3, 5.7, 4.7, 4.5, 3.6, 3.2, 3.2, 2.1, 0.98, 0.89)

categories <- c("Land use change", "Farm", "Animal feed", "Processing", "Transport", "Retail", "Packaging", "Losses")

# Example breakdown of emissions (these values should be adjusted based on actual data)
land_use <- c(60, 20, 25, 15, 10, 12, 8, 5, 6, 4, 3, 2, 1, 1, 1, 1, 1, 0.5, 0.3, 0.2)
farm <- c(20, 10, 8, 10, 12, 8, 6, 4, 3, 2.5, 2, 1.5, 1.2, 1, 0.8, 0.6, 0.5, 0.4, 0.3, 0.2)
animal_feed <- c(10, 5, 4, 5, 3, 2, 2, 1, 2, 1.5, 1, 0.8, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.05, 0.02)
processing <- c(3, 5, 2, 1.5, 2, 2, 1.5, 1.2, 0.8, 0.6, 0.5, 0.4, 0.3, 0.2, 0.2, 0.15, 0.12, 0.1, 0.08, 0.05)
transport <- c(2, 5, 1, 0.8, 1, 1.5, 1, 0.9, 0.7, 0.6, 0.4, 0.3, 0.25, 0.2, 0.18, 0.15, 0.1, 0.08, 0.05, 0.03)
retail <- c(2, 1, 0.5, 0.4, 0.3, 0.2, 0.2, 0.1, 0.1, 0.08, 0.05, 0.04, 0.03, 0.02, 0.015, 0.01, 0.008, 0.006, 0.004, 0.002)
packaging <- c(1, 0.8, 0.6, 0.5, 0.4, 0.3, 0.2, 0.1, 0.1, 0.08, 0.05, 0.04, 0.03, 0.02, 0.015, 0.01, 0.008, 0.006, 0.004, 0.002)
losses <- c(1, 0.5, 0.3, 0.2, 0.2, 0.15, 0.1, 0.08, 0.06, 0.05, 0.03, 0.025, 0.02, 0.015, 0.012, 0.01, 0.008, 0.006, 0.004, 0.002)

# Create a data frame
df <- data.frame(Food = rep(food_items, each = 8), 
                 Category = rep(categories, times = length(food_items)), 
                 Emissions = c(land_use, farm, animal_feed, processing, transport, retail, packaging, losses))

# Plot the data
ggplot(df, aes(x = Emissions, y = reorder(Food, -Emissions), fill = Category)) +
  geom_bar(stat = "identity") +
  labs(title = "Food: Greenhouse Gas Emissions Across the Supply Chain",
       x = "Emissions (kg COâ‚‚eq per kg of food)",
       y = "Food Item") +
  scale_fill_manual(values = c("#8DA0CB", "#E78AC3", "#A6D854", "#FFD92F", "#E5C494", "#B3B3B3", "#66C2A5", "#FC8D62")) +
  theme_minimal()
```

That's pretty solid if you ask me. The figure could use some cleaning up of labels, text, and colors. It also of course needs to consider the real data. I don't foresee ChatGPT improving the figure much more without some user-machine wrangling so I'm going to take over from here. Anything AI can do, I can (theoretically) doðŸ˜Š.

## MJ's Attempt

### Setup

```{r}
# load packages
library(dplyr)
```

```{r}
# load data
dat <- read.csv(
  here::here("presentation-exercise/data/food-emissions-supply-chain.csv")
  )
```

### Data processing

```{r}
dat1 <- dat %>%
  rename(
    food_items = Entity,
    land_use = food_emissions_land_use,
    farm = food_emissions_farm,
    animal_feed = food_emissions_animal_feed,
    processing = food_emissions_processing,
    transport = food_emissions_transport,
    retail = food_emissions_retail,
    packaging = food_emissions_packaging,
    losses = food_emissions_losses
  ) %>%
  select(-Code, -Year) %>% # remove unused columns
  mutate(
    total_emissions = rowSums(select(
      ., land_use, farm, animal_feed, processing, 
      transport, retail, packaging, losses))
  )

# pivot longer for plotting bars
dat2 <- dat1 %>%
  # data includes more items then shown on graph
  filter(
    food_items %in% c(
      "Beef (beef herd)", "Dark Chocolate", "Lamb & Mutton", 
      "Beef (dairy herd)", "Coffee", "Shrimps (farmed)", "Cheese", 
      "Fish (farmed)", "Pig Meat", "Poultry Meat", "Palm Oil", 
      "Olive Oil", "Eggs", "Rice", "Sunflower Oil", "Tofu", "Milk", 
      "Tomatoes", "Peas", "Bananas"
    )
    ) %>%
  tidyr::pivot_longer(
    cols = -food_items,
    names_to = "category",
    values_to = "emissions"
  ) 

# remove "total" row, clean up labels
dat3 <- dat2 %>%
  filter(
    category != "total_emissions"
  ) %>%
  # clean category labels
  mutate(
    category = case_when(
      category == "land_use" ~ "Land use change",
      category == "farm" ~ "Farm",
      category == "animal_feed" ~ "Animal feed",
      category == "processing" ~ "Processing",
      category == "transport" ~ "Transport",
      category == "retail" ~ "Retail", 
      category == "packaging" ~ "Packaging",
      category == "losses" ~ "Losses", 
      TRUE ~ category
    ), 
    # for ordering on plot
    category = factor(category, levels = c(
      "Losses", "Packaging", "Retail", "Transport", "Processing", 
      "Animal feed", "Farm", "Land use change"
    ))
  )

# reserve a separate dataset with total emissions
dat4 <- dat2 %>%
  filter(
    category == "total_emissions"
  )
```

### Plot the data
```{r, fig.width=10, fig.height=7}
ggplot(dat3, aes(x = emissions, y = reorder(food_items, emissions), fill = category)) +
  geom_bar(stat = "identity") +
  labs(title = "Food: greenhouse gas emissions across the supply chain",
       subtitle = "Greenhouse gas emissions are measured in kilograms of carbon dioxide-equivalents (CO2eq) per kilogram of food.",
       x = NULL,
       y = NULL,
       fill = NULL
       )+
  scale_fill_manual(values = c("darkseagreen", "burlywood", "orange", "cornflowerblue", "indianred", "yellow", "lightslategray", "lavender"),
                    limits = rev(levels(dat3$category))) +
  theme_minimal() +
  theme(legend.position = "top",
        plot.title = element_text(size = 20),
        legend.text = element_text(size = 11),
        axis.text.y = element_text(size = 12),
        panel.grid = element_blank()) +
  guides(fill = guide_legend(nrow = 1, byrow = TRUE))+
  geom_text(data = dat4, 
            aes(x = emissions, y = food_items, 
                label = paste(round(emissions, 1), "kg")), 
            hjust = -0.05,
            size = 3)
```

# Creating a table

I'll be using the same data that created the figure above to create a table. To make it more interesting, I'm going to use the full dataset to subset by food source/group.

Formatted text which can be bold, italic, etc.
- certainly in the title etc.

Colored text or highlighted cells
- highlight the cell with the greatest emmission group maybe?

Additional text outside of the regular table structure like spanning column headers or correctly attributed footnotes
- footnote on greenhouse gas emissions?

A descriptive caption explaining the useful information summary that your table represents.

Additionally, your table must contain at least one of the following advanced features:

A column with some type of image for the values, which could potentially be a data visualization (e.g. sparklines).
Automatically calculated summary statistics (summary statistics that you calculate manually do not count towards this objective)
Automatically applied (not manual) conditional formatting (potentially overlapping with formatted or colored text/cells)
Interactive features

## Setup
```{r}
# load packages
library(gt)
library(gtsummary)
```

# Data processing
```{r}
# put food items into categories
dat5 <- dat1 %>%
  mutate(
    food_group = case_when(
      food_items %in% c("Beef (beef herd)", "Beef (dairy herd)","Lamb & Mutton",
                        "Pig Meat", "Poultry Meat") ~ "Land Animals",
      food_items %in% c("Fish (farmed)", "Shrimps (farmed)") ~ "Water Animals",
      food_items %in% c("Cheese", "Eggs", "Milk") ~ "Animal By-products",
      food_items %in% c("Apples", "Bananas", "Berries & Grapes", "Citrus Fruit",
                        "Other Fruit", "Tomatoes") ~ "Fruits",
      food_items %in% c("Root Vegetables", "Onions & Leeks", "Brassicas",
                        "Other Vegetables", "Potatoes", 
                        "Cassava") ~ "Vegetables",
      food_items %in% c("Maize", "Barley", "Rice", "Wheat & Rye", "Oatmeal",
                        "Other Pulses", "Peas") ~ "Legumes & Grains",
      food_items %in% c("Beet Sugar", "Cane Sugar") ~ "Sugars",
      food_items %in% c("Groundnuts", "Nuts") ~ "Nuts & Seeds",
      food_items %in% c("Olive Oil", "Rapeseed Oil", "Soybean Oil", 
                        "Sunflower Oil", "Palm Oil") ~ "Oils",
      food_items %in% c("Soy milk", "Tofu") ~ "Plant-based Alternatives",
      food_items %in% c("Coffee", "Wine", "Dark Chocolate") ~ "Misc",
      TRUE ~ "Other"
    )
  )
```

```{r}
# summary stats by hand
format_ci <- function(df, d = 2) {
	fmt_str <- paste0("%.", d, "f")
	out <- paste0(
		sprintf(fmt_str, df$y), " (",
		sprintf(fmt_str, df$ymin), ", ",
		sprintf(fmt_str, df$ymax), ")"
	)
	
	return(out)
}

tab <- dat5 %>%
  group_by(food_group) %>%
  summarise(
    land = ggplot2::mean_cl_boot(land_use) %>% format_ci(),
		farm = ggplot2::mean_cl_boot(farm) %>% format_ci(),
		animal = ggplot2::mean_cl_boot(animal_feed) %>% format_ci(),
		procesing = ggplot2::mean_cl_boot(processing) %>% format_ci(),
		transport = ggplot2::mean_cl_boot(transport) %>% format_ci(),
		retail = ggplot2::mean_cl_boot(retail) %>% format_ci(),
		pack = ggplot2::mean_cl_boot(packaging) |> format_ci(),
		losses = ggplot2::mean_cl_boot(losses) |> format_ci(),
  ) %>%
  gt(rowname_col = "food_group") %>%
  cols_label(
    land = "Land use change",
		farm = "Farm",
		animal = "Animal feed",
		procesing = "Processing",
		transport = "Transport",
		retail = "Retail",
		pack = "Packaging",
		losses = "Losses"
  )

tab
```

